name: Test ELK Stack Deployment with Helm

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-helm-elk-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Remove conflicting packages
        run: |
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove -y $pkg; done

      - name: Install Docker dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

      - name: Add Docker repository and install Docker
        run: |
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Start Minikube with Docker driver
        run: |
          minikube start --driver=docker --cpus=4 --memory=8192

      - name: Use Minikube context
        run: |
          minikube kubectl -- config use-context minikube

      - name: Verify Minikube status
        run: |
          minikube status
          for i in {1..10}; do
            kubectl get nodes && break
            echo "Waiting for Kubernetes API..." && sleep 10
          done

      - name: Add Helm repository and update
        run: |
          helm repo add elastic https://helm.elastic.co
          helm repo update

      - name: Install ELK stack using Helm
        run: |
          helm install elk elastic/elasticsearch --timeout 15m
          helm install kibana elastic/kibana --timeout 15m
          helm install logstash elastic/logstash --timeout 15m

      - name: Check pod statuses
        run: |
          kubectl get pods -o wide

      - name: Check Elasticsearch logs
        run: |
          kubectl logs -l app=elasticsearch-master

      - name: Check Kibana logs
        run: |
          kubectl logs -l app=kibana

      - name: Check Logstash logs
        run: |
          kubectl logs -l app=logstash

      - name: Forward Kibana port
        run: |
          minikube kubectl -- port-forward service/kibana-kibana 5601:5601 &
          sleep 10

      - name: Test Kibana UI is accessible
        run: |
          curl -I http://localhost:5601

      - name: Clean up
        run: |
          helm uninstall elk
          helm uninstall kibana
          helm uninstall logstash
          minikube delete
