name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create a non-root user and switch to it
      run: |
        sudo useradd -m minikube-user
        echo 'minikube-user ALL=(ALL) NOPASSWD:ALL' | sudo tee /etc/sudoers.d/minikube-user
        sudo -i -u minikube-user bash <<EOF
        whoami
        cd $HOME
        EOF

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Set up Minikube (as non-root)
      run: |
        sudo -i -u minikube-user bash <<EOF
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x minikube
        mv minikube $HOME/.local/bin/
        mkdir -p $HOME/.minikube
        minikube start --driver=docker --force
        EOF

    - name: Wait for Minikube to be ready (with timeout)
      run: |
        sudo -i -u minikube-user bash <<EOF
        max_attempts=12
        attempt=1
        while [ \$attempt -le \$max_attempts ]; do
          if minikube status | grep -q "Running"; then
            echo "Minikube is ready."
            exit 0
          else
            echo "Waiting for Minikube to be ready... (attempt \$attempt/\$max_attempts)"
            sleep 10
            attempt=\$((attempt+1))
          fi
        done
        echo "Minikube did not become ready in time."
        exit 1
        EOF

    - name: Use Minikube's Docker daemon
      run: |
        sudo -i -u minikube-user bash <<EOF
        eval \$(minikube -p minikube docker-env)
        EOF

    - name: Create elastic-credentials secret
      run: |
        sudo -i -u minikube-user bash <<EOF
        kubectl create secret generic elastic-credentials \
          --from-literal=elastic_password=test_password \
          --from-literal=kibana_password=test_password \
          --from-literal=logstash_password=test_password
        EOF

    - name: Create ConfigMaps
      run: |
        sudo -i -u minikube-user bash <<EOF
        kubectl create configmap logstash-config --from-file=logstash/config/logstash.yml
        kubectl create configmap setup-scripts --from-file=setup/entrypoint.sh --from-file=setup/lib.sh
        EOF

    - name: Lint Helm chart
      run: |
        sudo -i -u minikube-user bash <<EOF
        helm lint kubernetes/option-1-helm
        EOF

    - name: Deploy ELK stack with Helm
      run: |
        sudo -i -u minikube-user bash <<EOF
        helm upgrade --install elk-stack kubernetes/option-1-helm
        EOF

    - name: Check pod status
      run: |
        sudo -i -u minikube-user bash <<EOF
        kubectl get pods
        EOF

    - name: Forward NGINX port for Kibana access
      run: |
        sudo -i -u minikube-user bash <<EOF
        kubectl apply -f kubernetes/option-2-kubectl/nginx.yaml
        kubectl port-forward service/nginx 443:443 &
        sleep 10 # Give port-forwarding time to start
        EOF

    - name: Run tests
      run: |
        sudo -i -u minikube-user bash <<EOF
        curl -k https://localhost # Check if NGINX and Kibana are accessible
        EOF

    - name: Clean up
      run: |
        sudo -i -u minikube-user bash <<EOF
        helm uninstall elk-stack
        minikube delete
        EOF
